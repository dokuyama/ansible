---
##
## Generic roles
##

# OS Selection
os_type: CentOS8

# ansible task selection
do_lifekeeper_install: true
do_mysql_install: true
do_postgresql_install: true
do_lifekeeper_create_resource: true
# LifeKeeper Resource setup script options:
lk_resource_create_datakeeper: true
lk_resource_create_ip_ark: true
lk_resource_create_mysql_ark: true


bastion_host_name: LK-TEST-bastion
active_host_name: LK-TEST-db01
standby_host_name: LK-TEST-db02
qw_host_name: LK-TEST-qw
bastion_os_user: k5user
lk_os_user: k5user
qw_os_user: k5user
timezone: Asia/Tokyo
root_password: testpass!2020
lifekeeper_vip: 10.0.111.200
lk_anti_affinity_server_group:
 - { server_group_name: "lk-anti-affinity", policies: "anti-affinity", state: "present" }

# Keypair (specify the pub/priv key file path)
keypair_name: ansible_key
keypair_public_key_file_path: files/id_rsa_ansible.pub
keypair_private_key_file_path: files/id_rsa_ansible

# OpenStack Network settings
target_cloud: jp-east-3
network_name: LK-TEST-network
public_subnet_name: LK-TEST-public-subnet
private_subnet_name: LK-TEST-private-subnet
public_subnet_cidr: 10.0.111.0/24
private_subnet_cidr: 10.0.112.0/24
dns_servers: [ 8.8.8.8 ]
router_attached_network: fip-net
router_name: LK-TEST-router

mng_security_group_name: "LK-TEST-mng"
security_group_rules:
  - { name: "ssh", security_group: "{{ mng_security_group_name }}", protocol: "tcp", port_range_min: "22", port_range_max: "22", remote_ip_prefix:  "{{ ipify_public_ip }}/32" }

# bastion node settings
bastion_host_volume_size: 30
bastion_host_volume_image: "CentOS 8.2 64bit (English) 01"
bastion_host_server_flavor: "T3-1"
bastion_host_ip_addr: 10.0.111.11

# active node settings
active_host_volume_size: 30
active_host_volume_image: "CentOS 8.2 64bit (English) 01"
active_host_server_flavor: "T3-1"
active_host_ip_addr: 10.0.111.101
active_data_volume: 
  - { volume_name: "{{ active_host_name }}-data-volume", size: 30, state: "present", server: "{{ active_host_name }}", device_name: "/dev/vdb" }

# standby node settings
standby_host_volume_size: 30
standby_host_volume_image: "{{ active_host_name }}-volume-image"
standby_host_server_flavor: "T3-1"
standby_host_ip_addr: 10.0.111.102
standby_data_volume:
  - { volume_name: "{{ standby_host_name }}-data-volume", size: 30, state: "present", server: "{{ standby_host_name }}", device_name: "/dev/vdb" }

# Quorum/Witness node settings
qw_host_volume_size: 30
qw_host_volume_image: "CentOS 8.2 64bit (English) 01"
qw_host_server_flavor: "T3-1"
qw_host_ip_addr: 10.0.111.103

# ----------------------------------------
# MySQL settings
# ----------------------------------------
mysql_rpm_name: "mariadb-server"
mysql_rpm_data_dir: "/var/lib/mysql"
mysql_data_dir: "{{ datakeeper_mount_dir }}/mysql"
customize_mysql_my_cnf: true
mysql_service_name: "mariadb"
mysqladmin_user: "root"
mysqladmin_password: "testpass2021"
mysql_os_user: "mysql"

# ----------------------------------------
# PostgreSQL settings
# ----------------------------------------
postgresql_rpm_name: "postgresql-server"
postgresql_rpm_data_dir: "/var/lib/pgsql"
postgresql_data_dir: "{{ datakeeper_mount_dir }}/pgsql"
customize_postgresql_conf: false
customize_pg_hba_conf: false
postgesql_initdb_command: "initdb -D {{ postgresql_data_dir }}/data --encoding=UTF-8 --no-locale"

# ----------------------------------------
# LifeKeeper setup
# ----------------------------------------
# !!!!!!!!!! CAUTION !!!!!!!!!!!!!!!!!!!!
# If set do_lifekeeper_install true
# you MUST put lifekeeper_iso_file and lifekeeper_license_file
# and lifekeeper-setup.conf
# !!!!!!!!!! CAUTION !!!!!!!!!!!!!!!!!!!!
lifekeeper_iso_file: LKL_V951_100620.iso
lifekeeper_license_files:
 - lifekeeper-license.txt
lk_setup_enable_qwk: true
lk_setup_enable_datakeeper: true
lk_setup_create_ec2_resource: false
lk_setup_create_oracle_resource: false

# DataKeeper directory
datakeeper_mount_dir: /data

# LifeKeeper Install options:
# DataKeeper
lk_HADR: "LKCONF_HADR=y"
lk_lkDR: "LKCONF_steeleye_lkDR=y"
# PostgreSQL ARK
lk_lkPGSQL: "LKCONF_steeleye_lkPGSQL=y"
# MySQL ARK
lk_lkSQL: "LKCONF_steeleye_lkSQL=y"
# Apache ARK
lk_lkAPA: "LKCONF_steeleye_lkAPA=y"

# LifeKeeper Setting script
lk_setup_ark_ip: "ARK_IP=Y"
lk_setup_active_host_ip_addr_commpath: "ACTIVE_COMMPATH_1_IP_ADDR={{ active_host_ip_addr }}"
lk_setup_standby_host_ip_addr_commpath: "STANDBY_COMMPATH_1_IP_ADDR={{ standby_host_ip_addr }}"
lk_setup_qw_commpath_1_ip_addr: "QW_COMMPATH_1_IP_ADDR={{ qw_host_ip_addr }}"
lk_setup_active_commpath_2_ip_addr: "# ACTIVE_COMMPATH_2_IP_ADDR is not set"
lk_setup_standby_commpath_2_ip_addr: "# STANDBY_COMMPATH_2_IP_ADDR is not set"
lk_setup_qw_commpath_2_ip_addr: "# QW_COMMPATH_1_IP_ADDR is not set"
lk_setup_dk_tag: "DK_TAG=datarep-data"

# MySQL Settings
lk_setup_ark_mysql: "ARK_MYSQL=Y"
lk_setup_mysql_tag: "MYSQL_TAG=mysql"
lk_setup_mysql_cnf_dir: "MYSQL_CNF_DIR=/etc"
lk_setup_mysql_bin_dir: "MYSQL_BIN_DIR=/usr/bin"
lk_setup_mysqladmin_user: "MYSQLADMIN_USER={{ mysqladmin_user }}"
lk_setup_mysqladmin_password: "MYSQLADMIN_PASSWORD={{ mysqladmin_password }}"
lk_setup_mysql_service_name: "MYSQL_SERVICE_NAME={{ mysql_service_name }}"

# PostgreSQL Settings
#lk_setup_ark_postgresql: "ARK_PGSQL=Y"


